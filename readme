# v1 基于JDK NIO原生序列化与动态代理的远程调用
## 项目结构
    rpc-api : 定义一套接口规范
    rpc-common : 基础公共组件
    rpc-core : 核心组件
    rpc-client : 客户端
    rpc-server : 服务端
## 基础类构建
    api    
        HelloService: 交互的接口调用
        HelloObject : 交互接口的数据封装类 主要数据以及对应的id
        
    common 
        RpcRequest : 消费者向提供者发送需要的数据，因为需要声明时哪一个接口、方法、方法参数、方法、类型
        RpcResponse ：服务端响应给客户端的信息 a.成功 b.失败
        ResponseCode ： 响应状态码 
        
    core 
        RpcClient : 通过socket编程 将客户端发送给服务端的信息 写入到输出流中 给 服务端socket中   
        RpcClientProxy : 通过生成一个代理类对象 
        
        RpcServer : 接收客户端socket发送的数据 由线程池去处理
        WorkerTrhead : 通过线程处理请求
         
    client 
        TestClient : 通过客户端调用代理类的方法
        
    server
        HelloServiceImpl : 实现接口的方法
        TestServer : 启动服务端
        
# v2 基于JDK 